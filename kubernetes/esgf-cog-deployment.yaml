apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f /Users/greguska/githubprojects/esgf/esgf-docker/docker-compose-greguska.yml
      convert
    kompose.version: 1.7.0 (767ab4b)
  creationTimestamp: null
  labels:
    io.kompose.service: esgf-cog
  name: esgf-cog
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: esgf-cog
    spec:
      containers:
      - args:
        - my-node.esgf.org
        - "true"
        - "false"
        env:
        - name: COG_CONFIG_DIR
          value: /usr/local/cog/cog_config
        - name: COG_DIR
          value: /usr/local/cog
        - name: COG_INSTALL_DIR
          value: /usr/local/cog/cog_install
        - name: ESGF_HOSTNAME
          value: my-node.esgf.org
        - name: INIT
          value: "true"
        image: esgfhub/esgf-cog:1.4
        name: cog
        ports:
        - containerPort: 8000
        resources: {}
        volumeMounts:
        - mountPath: /usr/local/cog/cog_config
          name: cog-data
        - mountPath: /etc/certs/
          name: esgf-cog-claim1
        - mountPath: /etc/httpd/conf.d/esgf-httpd.conf
          name: esgf-cog-claim2
        - mountPath: /root/archives/grid_security_certs.tar.xz
          name: esgf-cog-claim3
        - mountPath: /root/archives/esgf_config.tar.xz
          name: esgf-cog-claim4
      restartPolicy: Always
      volumes:
      - name: cog-data
        persistentVolumeClaim:
          claimName: cog-data
      - name: esgf-cog-claim1
        persistentVolumeClaim:
          claimName: esgf-cog-claim1
      - name: esgf-cog-claim2
        persistentVolumeClaim:
          claimName: esgf-cog-claim2
      - name: esgf-cog-claim3
        persistentVolumeClaim:
          claimName: esgf-cog-claim3
      - name: esgf-cog-claim4
        persistentVolumeClaim:
          claimName: esgf-cog-claim4
status: {}
